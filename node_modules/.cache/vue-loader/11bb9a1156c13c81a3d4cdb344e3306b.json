{"remainingRequest":"/Users/ryo_maeda/vue/hirusagari/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/ryo_maeda/vue/hirusagari/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ryo_maeda/vue/hirusagari/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ryo_maeda/vue/hirusagari/src/views/CalBattle.vue?vue&type=template&id=35186e5c&scoped=true&","dependencies":[{"path":"/Users/ryo_maeda/vue/hirusagari/src/views/CalBattle.vue","mtime":1614500974661},{"path":"/Users/ryo_maeda/vue/hirusagari/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ryo_maeda/vue/hirusagari/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/ryo_maeda/vue/hirusagari/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ryo_maeda/vue/hirusagari/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}